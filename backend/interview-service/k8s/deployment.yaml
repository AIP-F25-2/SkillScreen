# SkillScreen Kubernetes Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: skillscreen-api
  namespace: skillscreen
  labels:
    app: skillscreen-api
spec:
  replicas: 3
  selector:
    matchLabels:
      app: skillscreen-api
  template:
    metadata:
      labels:
        app: skillscreen-api
    spec:
      containers:
      - name: skillscreen-api
        image: skillscreen:latest
        ports:
        - containerPort: 8000
        env:
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: skillscreen-secrets
              key: database-url
        - name: REDIS_URL
          valueFrom:
            secretKeyRef:
              name: skillscreen-secrets
              key: redis-url
        - name: ENVIRONMENT
          value: "production"
        - name: DEBUG
          value: "false"
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "2Gi"
            cpu: "1000m"
        livenessProbe:
          httpGet:
            path: /api/health
            port: 8000
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /api/health
            port: 8000
          initialDelaySeconds: 5
          periodSeconds: 5
        volumeMounts:
        - name: logs
          mountPath: /app/logs
        - name: uploads
          mountPath: /app/uploads
        - name: reports
          mountPath: /app/reports
      volumes:
      - name: logs
        persistentVolumeClaim:
          claimName: skillscreen-logs-pvc
      - name: uploads
        persistentVolumeClaim:
          claimName: skillscreen-uploads-pvc
      - name: reports
        persistentVolumeClaim:
          claimName: skillscreen-reports-pvc
      imagePullSecrets:
      - name: skillscreen-registry-secret

---
apiVersion: v1
kind: Service
metadata:
  name: skillscreen-api-service
  namespace: skillscreen
spec:
  selector:
    app: skillscreen-api
  ports:
  - protocol: TCP
    port: 80
    targetPort: 8000
  type: ClusterIP

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: skillscreen-ingress
  namespace: skillscreen
  annotations:
    kubernetes.io/ingress.class: nginx
    cert-manager.io/cluster-issuer: letsencrypt-prod
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
spec:
  tls:
  - hosts:
    - api.skillscreen.com
    secretName: skillscreen-tls
  rules:
  - host: api.skillscreen.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: skillscreen-api-service
            port:
              number: 80

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: skillscreen-logs-pvc
  namespace: skillscreen
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 10Gi
  storageClassName: fast-ssd

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: skillscreen-uploads-pvc
  namespace: skillscreen
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 50Gi
  storageClassName: fast-ssd

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: skillscreen-reports-pvc
  namespace: skillscreen
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 20Gi
  storageClassName: fast-ssd

---
apiVersion: v1
kind: Secret
metadata:
  name: skillscreen-secrets
  namespace: skillscreen
type: Opaque
data:
  database-url: <base64-encoded-database-url>
  redis-url: <base64-encoded-redis-url>
  api-key: <base64-encoded-api-key>

---
apiVersion: v1
kind: Secret
metadata:
  name: skillscreen-registry-secret
  namespace: skillscreen
type: kubernetes.io/dockerconfigjson
data:
  .dockerconfigjson: <base64-encoded-docker-config>

---
apiVersion: v1
kind: Namespace
metadata:
  name: skillscreen
